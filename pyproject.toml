[tool.poetry]
name = "morvo12"
version = "0.1.0"
description = "Enterprise-grade AI marketing platform powered by agentic workflows"
authors = ["Morvo Team <info@morvo.ai>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = ">=3.11,<=3.13"
fastapi = "^0.110.0"
uvicorn = "^0.27.0"
pydantic = "^2.6.0"
pydantic-settings = "^2.2.0"
httpx = "^0.26.0"
loguru = "^0.7.2"
crewai = "^0.28.0"

openai = "^1.15.0"
langchain = "^0.1.16"
langchain-openai = "^0.1.3"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
python-multipart = "^0.0.9"
tenacity = "^8.2.3"
prometheus-client = "^0.19.0"
opentelemetry-api = "1.24.0"
opentelemetry-sdk = "1.24.0"
opentelemetry-exporter-otlp = "1.24.0"
opentelemetry-instrumentation-fastapi = "^0.45b0"
opentelemetry-instrumentation-httpx = "^0.45b0"
setuptools = "^80.9.0"
sqlalchemy = "^2.0.41"
asyncpg = "^0.30.0"
alembic = "^1.16.2"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
psycopg2-binary = "^2.9.9"
celery = "^5.5.3"
redis = "^6.2.0"
fastapi-cache2 = "^0.2.2"
email-validator = "^2.2.0"
slowapi = "^0.1.9"
sentry-sdk = {extras = ["fastapi"], version = "^2.32.0"}
autoflake = "^2.3.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.5"
black = "^24.1.0"
ruff = "^0.2.2"
isort = "^5.13.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
vulture = "^2.10"
types-python-jose = "^3.3.4"
types-requests = "^2.31.0"
bandit = "^1.8.5"
gradio = "^4.24.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 100

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "B", "I", "N", "UP", "ANN", "RUF"]
ignore = ["ANN101", "ANN102", "ANN401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
markers = [
    "unit: mark a test as a unit test",
    "integration: mark test as an integration test requiring external services",
]
async_collection_loop = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "crewai.*",
    "pgvector.*",
    
    "prometheus_client.*"
]
ignore_missing_imports = true

[tool.vulture]
min_confidence = 80
paths = ["app", "tests"]
sort_by_size = true
