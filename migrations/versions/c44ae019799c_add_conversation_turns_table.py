"""add_conversation_turns_table

Revision ID: c44ae019799c
Revises: 1ac826f6e3f2
Create Date: 2025-06-28 21:05:28.292715

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c44ae019799c'
down_revision: Union[str, None] = '1ac826f6e3f2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop dependent tables first with CASCADE
    op.execute('DROP TABLE IF EXISTS seranking_anchor_texts CASCADE')
    op.execute('DROP TABLE IF EXISTS seranking_referring_domains CASCADE') 
    op.execute('DROP TABLE IF EXISTS seranking_backlink_analysis CASCADE')
    
    # Create conversation_turns table
    op.create_table('conversation_turns',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('message_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('role', sa.String(length=20), nullable=False),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('agent_name', sa.String(length=100), nullable=True),
        sa.Column('metadata', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('message_id')
    )
    op.create_index(op.f('ix_conversation_turns_id'), 'conversation_turns', ['id'], unique=False)
    op.create_index(op.f('ix_conversation_turns_user_id'), 'conversation_turns', ['user_id'], unique=False)
    
    # Rest of the existing migration
    op.alter_column('business_profiles', 'website',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('business_profiles', 'locations',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False)
    op.alter_column('business_profiles', 'description',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               nullable=True)
    op.alter_column('business_profiles', 'target_audience',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False)
    op.alter_column('business_profiles', 'marketing_goals',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False)
    op.alter_column('business_profiles', 'competitors',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('business_profiles', 'current_channels',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('business_profiles', 'pain_points',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('business_profiles', 'social_profiles',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('business_profiles', 'brand_voice',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('business_profiles', 'brand_values',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('business_profiles', 'usp',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               nullable=True)
    op.alter_column('business_profiles', 'content_preferences',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.create_index(op.f('ix_business_profiles_id'), 'business_profiles', ['id'], unique=False)
    op.drop_column('business_profiles', 'crm_platform')
    op.drop_column('business_profiles', 'intelligence_last_updated')
    op.alter_column('seranking_backlink_analyses', 'analysis_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('seranking_backlink_analyses', 'total_backlinks',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('seranking_backlink_analyses', 'referring_domains',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('seranking_backlink_analyses', 'high_quality_links',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('seranking_backlink_analyses', 'medium_quality_links',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('seranking_backlink_analyses', 'low_quality_links',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('seranking_backlink_analyses', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('seranking_backlink_analyses', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('seranking_domains', sa.Column('domain_name', sa.String(length=255), nullable=False))
    op.add_column('seranking_domains', sa.Column('project_id', sa.String(length=100), nullable=True))
    op.add_column('seranking_domains', sa.Column('last_analysis_date', sa.DateTime(), nullable=False))
    op.add_column('seranking_domains', sa.Column('organic_keywords_count', sa.Integer(), nullable=False))
    op.add_column('seranking_domains', sa.Column('total_backlinks', sa.Integer(), nullable=False))
    op.add_column('seranking_domains', sa.Column('domain_authority', sa.Integer(), nullable=False))
    op.add_column('seranking_domains', sa.Column('keyword_data', sa.JSON(), nullable=True))
    op.add_column('seranking_domains', sa.Column('competitor_data', sa.JSON(), nullable=True))
    op.add_column('seranking_domains', sa.Column('ranking_history', sa.JSON(), nullable=True))
    op.drop_index(op.f('ix_seranking_domains_domain'), table_name='seranking_domains')
    op.create_index(op.f('ix_seranking_domains_domain_name'), 'seranking_domains', ['domain_name'], unique=False)
    op.create_index(op.f('ix_seranking_domains_id'), 'seranking_domains', ['id'], unique=False)
    op.create_index(op.f('ix_seranking_domains_project_id'), 'seranking_domains', ['project_id'], unique=True)
    op.drop_column('seranking_domains', 'last_analyzed')
    op.drop_column('seranking_domains', 'domain')
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.add_column('seranking_domains', sa.Column('domain', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('seranking_domains', sa.Column('last_analyzed', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_seranking_domains_project_id'), table_name='seranking_domains')
    op.drop_index(op.f('ix_seranking_domains_id'), table_name='seranking_domains')
    op.drop_index(op.f('ix_seranking_domains_domain_name'), table_name='seranking_domains')
    op.create_index(op.f('ix_seranking_domains_domain'), 'seranking_domains', ['domain'], unique=True)
    op.drop_column('seranking_domains', 'ranking_history')
    op.drop_column('seranking_domains', 'competitor_data')
    op.drop_column('seranking_domains', 'keyword_data')
    op.drop_column('seranking_domains', 'domain_authority')
    op.drop_column('seranking_domains', 'total_backlinks')
    op.drop_column('seranking_domains', 'organic_keywords_count')
    op.drop_column('seranking_domains', 'last_analysis_date')
    op.drop_column('seranking_domains', 'project_id')
    op.drop_column('seranking_domains', 'domain_name')
    op.alter_column('seranking_backlink_analyses', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('seranking_backlink_analyses', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('seranking_backlink_analyses', 'low_quality_links',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('seranking_backlink_analyses', 'medium_quality_links',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('seranking_backlink_analyses', 'high_quality_links',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('seranking_backlink_analyses', 'referring_domains',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('seranking_backlink_analyses', 'total_backlinks',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('seranking_backlink_analyses', 'analysis_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.add_column('business_profiles', sa.Column('intelligence_last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('business_profiles', sa.Column('crm_platform', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_business_profiles_id'), table_name='business_profiles')
    op.alter_column('business_profiles', 'content_preferences',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('business_profiles', 'usp',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               nullable=False)
    op.alter_column('business_profiles', 'brand_values',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.ARRAY(sa.VARCHAR()),
               nullable=False)
    op.alter_column('business_profiles', 'brand_voice',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('business_profiles', 'social_profiles',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('business_profiles', 'pain_points',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.ARRAY(sa.VARCHAR()),
               nullable=False)
    op.alter_column('business_profiles', 'current_channels',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.ARRAY(sa.VARCHAR()),
               nullable=False)
    op.alter_column('business_profiles', 'competitors',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.ARRAY(sa.VARCHAR()),
               nullable=False)
    op.alter_column('business_profiles', 'marketing_goals',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.ARRAY(sa.VARCHAR()),
               existing_nullable=False)
    op.alter_column('business_profiles', 'target_audience',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.ARRAY(sa.VARCHAR()),
               existing_nullable=False)
    op.alter_column('business_profiles', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               nullable=False)
    op.alter_column('business_profiles', 'locations',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.ARRAY(sa.VARCHAR()),
               existing_nullable=False)
    op.alter_column('business_profiles', 'website',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_table('seranking_referring_domains',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('analysis_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('referring_domain', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('domain_authority', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_saudi_domain', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_gcc_domain', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('backlinks_from_domain', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('saudi_market_relevance_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['analysis_id'], ['seranking_backlink_analysis.id'], name=op.f('seranking_referring_domains_analysis_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('seranking_referring_domains_pkey'))
    )
    op.create_table('seranking_anchor_texts',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('analysis_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('anchor_text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('anchor_language', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('backlinks_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_arabic', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_english', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('contains_saudi_terms', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('seo_value_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['analysis_id'], ['seranking_backlink_analysis.id'], name=op.f('seranking_anchor_texts_analysis_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('seranking_anchor_texts_pkey'))
    )
    op.create_table('seranking_backlink_analysis',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('domain_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('analysis_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('analysis_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('saudi_market_focus', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('gcc_analysis', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('total_backlinks', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('domain_inlink_rank', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('dofollow_backlinks', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('nofollow_backlinks', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('edu_backlinks', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('gov_backlinks', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('saudi_gov_backlinks', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('saudi_edu_backlinks', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('arabic_content_backlinks', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('local_saudi_domains', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('gcc_backlinks', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('raw_api_response', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('api_key_hash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('api_units_consumed', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('processing_time_seconds', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('success_status', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['domain_id'], ['seranking_domains.id'], name=op.f('seranking_backlink_analysis_domain_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('seranking_backlink_analysis_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('seranking_backlink_analysis_pkey'))
    )
    # ### end Alembic commands ###
