name: CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4

      # Setup Python
      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # Cache poetry virtualenv
      - name: Cache poetry dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      # Install Poetry
      - name: Install Poetry
        run: |
          pip install --upgrade pip
          pip install poetry==1.8.2

      - name: Install project dependencies
        run: |
          poetry install --no-interaction --with=dev,prod

      - name: Run Ruff (lint)
        run: |
          poetry run ruff check --output-format github .

      - name: Type checking with mypy
        run: |
          poetry run mypy .

      - name: Run tests with coverage
        run: |
          poetry run pytest -q --cov=app --cov-report=xml --cov-fail-under=80

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: false

  docker-build:
    needs: build-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
          build-args: |
            GIT_SHA=${{ github.sha }}
